# Étape 1 : Build des dépendances et du code
FROM node:20-alpine AS builder

WORKDIR /app

# Copier uniquement les fichiers essentiels pour optimiser le cache Docker
COPY package.json yarn.lock ./
COPY packages/frontend ./packages/frontend
COPY packages/api-types ./packages/api-types

ARG REACT_APP_API_URL

ENV REACT_APP_API_URL $REACT_APP_API_URL

RUN env

# Installer les dépendances avec Yarn Workspaces
RUN yarn install --frozen-lockfile

# Builder les types de api-types
RUN yarn workspace @monorepo/api-types build

# Builder le frontend
RUN yarn workspace @waboostr/frontend build

# Étape 2 : Image de production avec un serveur web léger
FROM node:20-alpine AS runner

WORKDIR /app

# Installer serve pour servir les fichiers statiques
RUN yarn global add serve

# Copier les fichiers statiques du build
COPY --from=builder /app/packages/frontend/build ./build

RUN env

EXPOSE 3000

# Servir les fichiers statiques avec serve
CMD ["serve", "-s", "build", "-l", "3000"]